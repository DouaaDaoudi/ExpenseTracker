@page "/"
@using ExpenseTracker.Models
@using ExpenseTracker.Data
@using Microsoft.EntityFrameworkCore

@inject ApplicationDbContext Db

<PageTitle>Expenses</PageTitle>

<h3>Personal Expenses</h3>

<EditForm Model="newExpense" OnValidSubmit="AddExpense" class="p-4 border rounded shadow-sm bg-light">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h4 class="mb-3">Add New Expense</h4>

    <div class="row mb-3">
        <div class="col-md-6">
            <label class="form-label">Date</label>
            <InputDate @bind-Value="newExpense.Date" class="form-control" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Category</label>
            <InputSelect @bind-Value="newExpense.Category" class="form-select">
                <option value="">-- Select Category --</option>
                <option value="Food">Food</option>
                <option value="Transport">Transport</option>
                <option value="Utilities">Utilities</option>
                <option value="Entertainment">Entertainment</option>
                <option value="Other">Other</option>
            </InputSelect>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label class="form-label">Amount</label>
            <InputNumber @bind-Value="newExpense.Amount" class="form-control" />
        </div>
        <div class="col-md-6">
            <label class="form-label">Notes</label>
            <InputTextArea @bind-Value="newExpense.Notes" class="form-control" rows="1" />
        </div>
    </div>

    <div class="text-end">
        <button type="submit" class="btn btn-primary px-4">Add Expense</button>
    </div>
</EditForm>

@if (expenses == null)
{
    <p>Loading…</p>
}
else
{
    <h3>Previous Expenses</h3>
    <table class="table table-hover table-striped table-bordered align-middle shadow-sm w-100" style="table-layout: fixed;">
        <thead class="table-primary">
            <tr>
                <th scope="col" style="width: 20%;">Date</th>
                <th scope="col" style="width: 30%;">Category</th>
                <th scope="col" style="width: 20%;">Amount</th>
                <th scope="col" style="width: 30%;">Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var e in expenses)
            {
                <tr>
                    <td>@e.Date.ToShortDateString()</td>
                    <td>@e.Category</td>
                    <td>@e.Amount</td>
                    <td>@e.Notes</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Expense> expenses = new();
    private Expense newExpense = new() { Date = DateTime.Today };

    protected override async Task OnInitializedAsync()
    {
        expenses = await Db.Expenses.OrderByDescending(e => e.Date).ToListAsync();
    }

    private async Task AddExpense()
    {
        Db.Expenses.Add(newExpense);
        await Db.SaveChangesAsync();

        newExpense = new() { Date = DateTime.Today };

        expenses = await Db.Expenses.OrderByDescending(e => e.Date).ToListAsync();
    }
}